// Generated by CoffeeScript 1.12.7
(function() {
  var LocalTaskNewCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  LocalTaskNewCtrl = (function(superClass) {
    extend(LocalTaskNewCtrl, superClass);

    function LocalTaskNewCtrl() {
      return LocalTaskNewCtrl.__super__.constructor.apply(this, arguments);
    }

    LocalTaskNewCtrl.prototype.events = {
      "load #localTaskCombi-form": "loadNew",
      "singleTap a[data-action=save]": "onSave",
      "singleTap a[data-action=cancel]": "onCancel",
      "singleTap a[data-action=new]": "addCombi",
      "singleTap a[data-action=combi]": "onCombi",
      "change select[data-id=lotTaskSelect]": "changeSelectTask"
    };

    LocalTaskNewCtrl.prototype.elements = {
      "#localTaskCombi-form": "localTaskFormCombi",
      "a[data-action=save]": "buttonSave",
      "a[data-action=cancel]": "buttonCancel",
      "a[data-action=combi]": "buttonCombi",
      "a[data-action=single]": "buttonSingle",
      "a[data-action=new]": "buttonNew"
    };

    LocalTaskNewCtrl.prototype.onCombi = function(event) {
      return __FacadeCore.Router_article("newLocalTask", "localTaskCombi-form");
    };

    LocalTaskNewCtrl.prototype.loadNew = function(event) {
      var _this, asyn, combiRes, combiTask, data, i, j, k, local, localTask, localTaskMod, lotTaskCombiIdFirst, lotTaskCombiIdSecond, lotTaskCombiRes, lotTaskIdSelect, lotVisible, ref, simpleLocalTasks, textsTemplates, url, view;
      this.buttonCombi.hide();
      this.buttonSingle.show();
      this.buttonNew.show();
      localTask = __FacadeCore.Cache_get(appName + "localTaskNew");
      simpleLocalTasks = __FacadeCore.Cache_get(appName + "simpleLocalTasks");
      if (!simpleLocalTasks) {
        asyn = __FacadeCore.Service_Settings_asyncFalse();
        url = "http://" + appHost + "/localTask/manager/listOnlySimple";
        local = __FacadeCore.Cache_get(appName + "local");
        data = {
          localId: local.id
        };
        simpleLocalTasks = $$.json(url, data);
        simpleLocalTasks = Lungo.Core.orderByProperty(simpleLocalTasks, "lotName", "asc");
        __FacadeCore.Cache_remove(appName + "simpleLocalTasks");
        __FacadeCore.Cache_set(appName + "simpleLocalTasks", simpleLocalTasks);
        __FacadeCore.Service_Settings_async(asyn);
      }
      if (simpleLocalTasks.length === 0) {
        _this = this;
        Lungo.Notification.success(findLangTextElement("label.notification.localTaskCombiNotSingle.title"), findLangTextElement("label.notification.localTaskCombiNotSingle.text"), null, 3, function() {
          __FacadeCore.Router_article("newLocalTask", "localTask-form");
          __FacadeCore.Cache_remove(appName + "localTaskNew");
          __FacadeCore.Cache_remove(appName + "simpleLocalTasks");
          return _this.resetArticleCombi();
        });
      }
      this.localTaskFormCombi.children().empty();
      if (localTask) {
        this.buttonSingle.hide();
        textsTemplates = {
          selectTask: findLangTextElement("localTask.selectTask"),
          durationCombiTasks: findLangTextElement("localTask.durationCombiTasks"),
          "delete": findLangTextElement("form.delete"),
          cabCombiTextNew: findLangTextElement("localTask.cabCombiTextNew"),
          lotVisible: findLangTextElement("localTask.visible"),
          yes: findLangTextElement("general.yes"),
          no: findLangTextElement("general.no")
        };
        combiTask = localTask.lotTaskCombiId;
        combiRes = localTask.lotTaskCombiRes;
        j = 1;
        lotTaskCombiIdFirst = combiTask[0];
        for (i = k = 0, ref = combiRes.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {
          lotTaskCombiIdSecond = combiTask[i + 1];
          lotTaskCombiRes = combiRes[i];
          localTaskMod = new __Model.LocalTask({
            lotId: j,
            lotTaskCombiIdFirst: lotTaskCombiIdFirst,
            lotTaskCombiIdSecond: lotTaskCombiIdSecond,
            lotTaskCombiRes: lotTaskCombiRes.toString(),
            texts: textsTemplates
          });
          if (j === 1) {
            view = new __View.LocalTaskCombiFirstView({
              model: localTaskMod
            });
          } else {
            view = new __View.LocalTaskCombiView({
              model: localTaskMod
            });
          }
          view.append(localTaskMod);
          j++;
        }
        lotTaskIdSelect = $$("#localTaskCombi-form select[data-id=lotTaskSelect]");
        _this = this;
        i = 1;
        lotTaskIdSelect.each(function() {
          _this.fillCombiTask($$(this), i, false);
          return i++;
        });
        lotVisible = $$("#localTaskCombi-form select[data-id=lotVisible]");
        if (localTask.lotVisible === 1) {
          return lotVisible[0].options.selectedIndex = 0;
        } else {
          return lotVisible[0].options.selectedIndex = 1;
        }
      } else {
        this.addCombi();
        lotVisible = $$("#localTaskCombi-form select[data-id=lotVisible]");
        return lotVisible[0].options.selectedIndex = 0;
      }
    };

    LocalTaskNewCtrl.prototype.fillCombiTask = function(objSel, ind, isNew) {
      var i, k, len, localTask, lotCombiId, nameObjAnt, objSelAnt, objTaskDuration, simpleLocalTask, simpleLocalTasks, taskOption, taskPost;
      nameObjAnt = "#localTaskCombi-form #lotTaskIdSecond" + (ind - 1);
      if (objSel[0].id === "lotTaskIdSecond1") {
        nameObjAnt = "#localTaskCombi-form #lotTaskIdFirst1";
      }
      objSelAnt = $$(nameObjAnt);
      simpleLocalTasks = __FacadeCore.Cache_get(appName + "simpleLocalTasks");
      if (!isNew) {
        localTask = __FacadeCore.Cache_get(appName + "localTaskNew");
        if (localTask) {
          lotCombiId = localTask.lotTaskCombiId[ind - 1];
        }
      }
      i = -1;
      taskOption = 0;
      for (k = 0, len = simpleLocalTasks.length; k < len; k++) {
        simpleLocalTask = simpleLocalTasks[k];
        i++;
        objSel[0].options[i] = new Option(simpleLocalTask.lotName, simpleLocalTask.id);
        if (!isNew) {
          if (lotCombiId === simpleLocalTask.id) {
            taskOption = i;
          }
        }
        if (objSelAnt.val() && objSelAnt.val() === simpleLocalTask.id.toString()) {
          taskPost = simpleLocalTask.lotTaskPost;
        }
      }
      if (!taskPost) {
        taskPost = "0";
      }
      objSel[0].options.selectedIndex = taskOption;
      objTaskDuration = $$("#localTaskCombi-form #lotTaskDuration" + ind);
      if (objSelAnt[0] && objTaskDuration[0] && objTaskDuration.val() === '') {
        return objTaskDuration.val(taskPost.toString());
      }
    };

    LocalTaskNewCtrl.prototype.changeSelectTask = function(event) {
      var i, k, l, len, len1, objTaskDuration, ref, select, simpleLocalTask, simpleLocalTasks, taskPost, tasksSelect;
      tasksSelect = $$(event.currentTarget);
      simpleLocalTasks = __FacadeCore.Cache_get(appName + "simpleLocalTasks");
      for (k = 0, len = simpleLocalTasks.length; k < len; k++) {
        simpleLocalTask = simpleLocalTasks[k];
        if (tasksSelect.val() && tasksSelect.val() === simpleLocalTask.id.toString()) {
          taskPost = simpleLocalTask.lotTaskPost;
          break;
        }
      }
      if (!taskPost) {
        taskPost = "0";
      }
      i = 0;
      ref = $$("select[data-id=lotTaskSelect]");
      for (l = 0, len1 = ref.length; l < len1; l++) {
        select = ref[l];
        i++;
        if (select.id === event.currentTarget.id) {
          break;
        }
      }
      objTaskDuration = $$("#localTaskCombi-form #lotTaskDuration" + i);
      if (objTaskDuration[0]) {
        return objTaskDuration.val(taskPost.toString());
      }
    };

    LocalTaskNewCtrl.prototype.addCombi = function() {
      var i, localTaskMod, objFirst, objSecond, textsTemplates, view;
      i = 1;
      while ((Lungo.dom("#localTaskCombi-form #lotTaskDuration" + i))[0]) {
        i++;
      }
      textsTemplates = {
        selectTask: findLangTextElement("localTask.selectTask"),
        durationCombiTasks: findLangTextElement("localTask.durationCombiTasks"),
        "delete": findLangTextElement("form.delete"),
        cabCombiTextNew: findLangTextElement("localTask.cabCombiTextNew"),
        lotVisible: findLangTextElement("localTask.visible"),
        yes: findLangTextElement("general.yes"),
        no: findLangTextElement("general.no")
      };
      localTaskMod = new __Model.LocalTask({
        lotId: i,
        texts: textsTemplates
      });
      if (i === 1) {
        view = new __View.LocalTaskCombiFirstView({
          model: localTaskMod
        });
      } else {
        view = new __View.LocalTaskCombiView({
          model: localTaskMod
        });
      }
      view.append(localTaskMod);
      if (i === 1) {
        objFirst = Lungo.dom("#localTaskCombi-form #lotTaskIdFirst" + i);
        this.fillCombiTask(objFirst, i, true);
      }
      objSecond = Lungo.dom("#localTaskCombi-form #lotTaskIdSecond" + i);
      return this.fillCombiTask(objSecond, i, true);
    };

    LocalTaskNewCtrl.prototype.onSave = function(event) {
      var _this, data, duplicate, duplicateText, i, listCombi, local, localTask, lotTaskCombiId, lotTaskCombiIdAux, lotTaskCombiRes, lotVisible, selectLotTaskCombiId, selectLotTaskCombiRes, simpleLocalTasks, url;
      if (this.localTaskFormCombi.hasClass("active")) {
        if (this.validateFormCombi()) {
          __FacadeCore.Cache_remove(appName + "elementSave");
          __FacadeCore.Cache_remove(appName + "elementCancel");
          __FacadeCore.Cache_set(appName + "elementSave", this.buttonSave.html());
          __FacadeCore.Cache_set(appName + "elementCancel", this.buttonCancel.html());
          Lungo.Element.loading(this.buttonSave.selector, "black");
          Lungo.Element.loading(this.buttonCancel.selector, "black");
          localTask = __FacadeCore.Cache_get(appName + "localTaskNew");
          simpleLocalTasks = __FacadeCore.Cache_get(appName + "simpleLocalTasks");
          selectLotTaskCombiId = "";
          selectLotTaskCombiRes = "";
          listCombi = Lungo.dom("#localTaskCombi-form ul li");
          if (listCombi.length > 1) {
            lotTaskCombiId = $$("#localTaskCombi-form select[data-id=lotTaskSelect]");
            lotTaskCombiIdAux = new Array();
            i = 0;
            lotTaskCombiId.each(function() {
              lotTaskCombiIdAux[i] = $$(this).val();
              return i++;
            });
            duplicate = arrHasDupes(lotTaskCombiIdAux);
            if (duplicate) {
              duplicateText = (Lungo.Core.findByProperty(simpleLocalTasks, "id", duplicate)).lotName;
              _this = this;
              return Lungo.Notification.error(findLangTextElement("label.notification.localTaskCombiDiferent.title"), findLangTextElement("label.notification.localTaskCombiDiferent.text") + " " + duplicateText + " " + findLangTextElement("label.notification.localTaskCombiDiferent.text2"), null, 3, function() {
                return _this.resetArticleCombi();
              });
            } else {
              i = 0;
              lotTaskCombiId.each(function() {
                if (i > 0) {
                  selectLotTaskCombiId += ",";
                }
                selectLotTaskCombiId += $$(this).val();
                return i++;
              });
              lotTaskCombiRes = $$("#localTaskCombi-form input");
              i = 0;
              lotTaskCombiRes.each(function() {
                if (i > 0) {
                  selectLotTaskCombiRes += ",";
                }
                selectLotTaskCombiRes += $$(this).val();
                return i++;
              });
              lotVisible = $$("#localTaskCombi-form select[data-id=lotVisible]");
              url = "http://" + appHost + "/localTask/manager/newCombi";
              local = __FacadeCore.Cache_get(appName + "local");
              data = {
                localId: local.id,
                lotTaskCombiId: selectLotTaskCombiId.toString(),
                lotTaskCombiRes: selectLotTaskCombiRes.toString(),
                lotVisible: lotVisible.val()
              };
              if (localTask) {
                data.id = localTask.lotId;
              }
              _this = this;
              return $$.put(url, data, function() {
                return Lungo.Notification.success(findLangTextElement("label.notification.salvedData.title"), findLangTextElement("label.notification.salvedData.text"), null, 3, function() {
                  __FacadeCore.Router_article("booking", "local-tasks");
                  __FacadeCore.Cache_remove(appName + "localTaskNew");
                  __FacadeCore.Cache_remove(appName + "simpleLocalTasks");
                  return _this.resetArticleCombi();
                });
              });
            }
          }
        }
      }
    };

    LocalTaskNewCtrl.prototype.validateFormCombi = function() {
      var i, k, listCombi, lotTaskCombiRes, lotTaskDurationError, lotTaskDurationErrorId, ref, result;
      result = true;
      lotTaskDurationErrorId = $$("#localTaskCombi-form label[data-id=lotTaskDurationError]");
      lotTaskDurationErrorId.each(function() {
        return $$(this).html("");
      });
      listCombi = Lungo.dom("#localTaskCombi-form ul li");
      if (listCombi.length > 1) {
        for (i = k = 1, ref = listCombi.length - 1; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {
          lotTaskCombiRes = $$(listCombi[i]).find('input')[0];
          lotTaskDurationError = $$("#localTaskCombi-form [id=lotTaskDurationError" + i + "]");
          if (!lotTaskCombiRes.checkValidity()) {
            lotTaskDurationError.html(getMessageValidity(lotTaskCombiRes));
            lotTaskCombiRes.focus();
            result = false;
            break;
          }
        }
      }
      return result;
    };

    LocalTaskNewCtrl.prototype.onCancel = function(event) {
      if (this.localTaskFormCombi.hasClass("active")) {
        __FacadeCore.Cache_remove(appName + "elementSave");
        __FacadeCore.Cache_remove(appName + "elementCancel");
        __FacadeCore.Cache_set(appName + "elementSave", this.buttonSave.html());
        __FacadeCore.Cache_set(appName + "elementCancel", this.buttonCancel.html());
        Lungo.Element.loading(this.buttonSave.selector, "black");
        Lungo.Element.loading(this.buttonCancel.selector, "black");
        this.resetArticleCombi();
        __FacadeCore.Cache_remove(appName + "localTaskNew");
        __FacadeCore.Cache_remove(appName + "simpleLocalTasks");
        return __FacadeCore.Router_back();
      }
    };

    LocalTaskNewCtrl.prototype.resetArticleCombi = function() {
      var lotTaskDurationError, lotVisible;
      this.buttonSave.html(__FacadeCore.Cache_get(appName + "elementSave"));
      this.buttonCancel.html(__FacadeCore.Cache_get(appName + "elementCancel"));
      lotTaskDurationError = $$("#localTaskCombi-form [data-id=lotTaskDurationError]");
      lotTaskDurationError.each(function() {
        return $$(this).html("");
      });
      lotVisible = $$("#localTaskCombi-form select[data-id=lotVisible]");
      return lotVisible[0].options.selectedIndex = 0;
    };

    return LocalTaskNewCtrl;

  })(Monocle.Controller);

  __Controller.LocalTaskNew = new LocalTaskNewCtrl("section#newLocalTask");

}).call(this);

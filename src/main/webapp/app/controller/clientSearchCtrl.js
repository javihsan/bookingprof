// Generated by CoffeeScript 1.12.7
(function() {
  var ClientSearchCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ClientSearchCtrl = (function(superClass) {
    var keywordType, result;

    extend(ClientSearchCtrl, superClass);

    function ClientSearchCtrl() {
      return ClientSearchCtrl.__super__.constructor.apply(this, arguments);
    }

    result = {};

    keywordType = null;

    ClientSearchCtrl.prototype.events = {
      "singleTap a[data-action=cancel]": "onCancel",
      "load article#search-clients": "loadClientSearch",
      "unload article#search-clients": "onUnload",
      "keyup article#search-clients #keyword-type": "onKeyWordType"
    };

    ClientSearchCtrl.prototype.onKeyWordType = function(event) {
      return this.showListClients();
    };

    ClientSearchCtrl.prototype.loadClientSearch = function(event) {
      var clients;
      Lungo.Element.loading("#search-clients ul", "black");
      clients = __FacadeCore.Cache_get(appName + "clients");
      return this.showClientSearch(clients);
    };

    ClientSearchCtrl.prototype.showClientSearch = function(response) {
      var clientSearch;
      if (response.length > 0) {
        result = Lungo.Core.toArray(response);
        result = Lungo.Core.orderByProperty(result, "whoName", "asc");
        return this.showListClients();
      } else {
        clientSearch = Lungo.dom("#search-clients ul");
        this.cleanList(clientSearch);
        return Lungo.Notification.success(findLangTextElement("label.notification.noData.title"), findLangTextElement("label.notification.noData.text"), null, 3, function(response) {
          return __FacadeCore.Router_back();
        });
      }
    };

    ClientSearchCtrl.prototype.showListClients = function() {
      var client, clientAux, clientSearch, i, len, local, results, texts, valSearch, view;
      clientSearch = Lungo.dom("#search-clients ul");
      this.cleanList(clientSearch);
      if (!keywordType) {
        texts = {
          search: findLangTextElement("form.search")
        };
        view = new __View.SearchTypeView;
        view.append(texts);
        keywordType = Lungo.dom("article#search-clients input#keyword-type");
      }
      valSearch = keywordType.val().toString().toLowerCase();
      local = __FacadeCore.Cache_get(appName + "local");
      if (valSearch !== "" || local.locNewClientDefault === 1) {
        results = [];
        for (i = 0, len = result.length; i < len; i++) {
          clientAux = result[i];
          if (clientAux.whoName.toLowerCase().indexOf(valSearch) !== -1) {
            client = new __Model.Client({
              enabled: true,
              cliId: clientAux.id,
              cliName: clientAux.whoName,
              cliSurname: clientAux.whoSurname,
              cliEmail: clientAux.whoEmail,
              cliGender: clientAux.whoGender,
              cliBirthday: clientAux.whoBirthday,
              cliTelf1: clientAux.whoTelf1,
              cliTelf2: clientAux.whoTelf2
            });
            view = new __View.ClientSearchListView({
              model: client
            });
            results.push(view.append(client));
          } else {
            results.push(void 0);
          }
        }
        return results;
      }
    };

    ClientSearchCtrl.prototype.onCancel = function(event) {
      var router;
      router = __FacadeCore.Cache_get(appName + "routerSearchClient");
      __FacadeCore.Cache_remove(appName + "routerSearchClient");
      return __FacadeCore.Router_section(router);
    };

    ClientSearchCtrl.prototype.resetArticle = function() {
      if (keywordType) {
        keywordType.val("");
      }
      return keywordType = null;
    };

    ClientSearchCtrl.prototype.onUnload = function(event) {
      this.resetArticle();
      return __FacadeCore.Cache_remove(appName + "selectClient");
    };

    ClientSearchCtrl.prototype.cleanList = function(obj) {
      var i, len, objChildren, ref, results;
      ref = obj.children();
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        objChildren = ref[i];
        if (!$$(objChildren).hasClass("dark")) {
          results.push($$(objChildren).remove());
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    return ClientSearchCtrl;

  })(Monocle.Controller);

  __Controller.ClientSearch = new ClientSearchCtrl("section#searchClient");

}).call(this);

// Generated by CoffeeScript 1.12.7
(function() {
  var ProductListCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ProductListCtrl = (function(superClass) {
    extend(ProductListCtrl, superClass);

    function ProductListCtrl() {
      return ProductListCtrl.__super__.constructor.apply(this, arguments);
    }

    ProductListCtrl.prototype.events = {
      "load article#list-product": "loadListProduct",
      "singleTap a[data-action=new]": "newProduct"
    };

    ProductListCtrl.prototype.elements = {
      "#list-product": "listProduct",
      "header a[href=\\#]": "header",
      "header a[href=\\#menu]": "aside",
      "a[data-action=new]": "buttonAdd",
      "footer a": "footer"
    };

    ProductListCtrl.prototype.newProduct = function(event) {
      if (this.listProduct.hasClass("active")) {
        return __FacadeCore.Router_article("newProduct", "product-form");
      }
    };

    ProductListCtrl.prototype.loadListProduct = function(event) {
      var _this, data, local, url;
      this.header.hide();
      this.aside.show();
      this.buttonAdd.show();
      this.footer.hide();
      Lungo.Element.loading("#list-product ul", "black");
      url = "http://" + appHost + "/product/operator/list";
      local = __FacadeCore.Cache_get(appName + "local");
      data = {
        localId: local.id
      };
      _this = this;
      return $$.json(url, data, function(response) {
        return _this.showProduct(response);
      });
    };

    ProductListCtrl.prototype.showProduct = function(response) {
      var i, len, local, proRate, product, productAux, result, results, texts, textsTemplates, view;
      if (response.length > 0) {
        result = Lungo.Core.toArray(response);
        result = Lungo.Core.orderByProperty(result, "proName", "asc");
        this.listProduct.children().empty();
        texts = {
          cabText: findLangTextElement("label.aside.products")
        };
        view = new __View.ListCabView({
          model: texts,
          container: "section#booking article#list-product ul"
        });
        view.append(texts);
        local = __FacadeCore.Cache_get(appName + "local");
        textsTemplates = {
          currency: local.locWhere.wheCurrency
        };
        results = [];
        for (i = 0, len = result.length; i < len; i++) {
          productAux = result[i];
          proRate = productAux.proRate;
          product = new __Model.Product({
            enabled: true,
            proId: productAux.id,
            proLocalId: productAux.proLocalId,
            proNameMulti: productAux.proNameMulti,
            proRate: parseFloat(proRate).toFixed(2),
            proName: productAux.proName,
            texts: textsTemplates
          });
          view = new __View.ProductListView({
            model: product
          });
          results.push(view.append(product));
        }
        return results;
      } else {
        this.listProduct.children().empty();
        texts = {
          cabText: findLangTextElement("label.aside.products")
        };
        view = new __View.ListCabView({
          model: texts,
          container: "section#booking article#list-product ul"
        });
        view.append(texts);
        return Lungo.Notification.success(findLangTextElement("label.notification.noData.title"), findLangTextElement("label.notification.noData.text"), null, 3);
      }
    };

    return ProductListCtrl;

  })(Monocle.Controller);

  __Controller.ProductList = new ProductListCtrl("section#booking");

}).call(this);

// Generated by CoffeeScript 1.12.7
(function() {
  var RangeSelectCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  RangeSelectCtrl = (function(superClass) {
    extend(RangeSelectCtrl, superClass);

    function RangeSelectCtrl() {
      return RangeSelectCtrl.__super__.constructor.apply(this, arguments);
    }

    RangeSelectCtrl.prototype.events = {
      "load article#range-form": "onLoad",
      "singleTap a[data-action=save]": "onSave",
      "singleTap a[data-action=cancel]": "onCancel",
      "change #yearDate": "changeYear",
      "change #monthMonthDate": "changeMonth",
      "change #monthYearDate": "changeMonth",
      "change #startDate": "changeDate",
      "change #endDate": "changeDate"
    };

    RangeSelectCtrl.prototype.elements = {
      "a[data-action=save]": "buttonSave",
      "a[data-action=cancel]": "buttonCancel",
      "#yearDate": "yearDate",
      "#monthMonthDate": "monthMonthDate",
      "#monthYearDate": "monthYearDate",
      "#startDate": "startDate",
      "#error_startDate": "startDateError",
      "#endDate": "endDate",
      "#error_endDate": "endDateError"
    };

    RangeSelectCtrl.prototype.changeYear = function(event) {
      this.startDateError.html("");
      this.endDateError.html("");
      if (this.yearDate.val() && this.yearDate.val().length > 0) {
        this.monthMonthDate.val("");
        this.monthYearDate.val("");
        this.startDate.val(this.yearDate.val() + "-01-01");
        return this.endDate.val(this.yearDate.val() + "-12-31");
      } else {
        this.startDate.val("");
        return this.endDate.val("");
      }
    };

    RangeSelectCtrl.prototype.changeMonth = function(event) {
      var dayLength, newDayAux, strMonth;
      this.startDateError.html("");
      this.endDateError.html("");
      if (this.monthMonthDate.val() && this.monthYearDate.val().length > 0 && this.monthYearDate.val() && this.monthYearDate.val().length > 0) {
        strMonth = this.monthMonthDate.val();
        if (parseInt(this.monthMonthDate.val()) <= 9) {
          strMonth = "0" + strMonth;
        }
        newDayAux = new Date(this.monthYearDate.val(), this.monthMonthDate.val(), 0);
        dayLength = newDayAux.getDate();
        this.yearDate.val("");
        this.startDate.val(this.monthYearDate.val() + "-" + strMonth + "-01");
        return this.endDate.val(this.monthYearDate.val() + "-" + strMonth + "-" + dayLength);
      } else {
        this.startDate.val("");
        return this.endDate.val("");
      }
    };

    RangeSelectCtrl.prototype.changeDate = function(event) {
      this.startDateError.html("");
      this.endDateError.html("");
      this.yearDate.val("");
      this.monthMonthDate.val("");
      this.monthYearDate.val("");
      this.startDate.val(formatDate(this.startDate.val()));
      return this.endDate.val(formatDate(this.endDate.val()));
    };

    RangeSelectCtrl.prototype.onLoad = function(event) {
      var i, j, k, m, ref, results, selectedRangeTimes, strMonth, today, y, year;
      selectedRangeTimes = __FacadeCore.Cache_get(appName + "selectedRangeTimes");
      if (selectedRangeTimes) {
        this.startDate.val(selectedRangeTimes.start);
        this.endDate.val(selectedRangeTimes.end);
      } else {
        this.startDate.val("");
        this.endDate.val("");
      }
      today = new Date();
      year = today.getFullYear();
      i = 1;
      for (y = j = 2013, ref = year; 2013 <= ref ? j <= ref : j >= ref; y = 2013 <= ref ? ++j : --j) {
        this.yearDate[0].options[i] = new Option(y, y);
        this.monthYearDate[0].options[i] = new Option(y, y);
        i++;
      }
      results = [];
      for (m = k = 1; k <= 12; m = ++k) {
        strMonth = eval(findLangTextElement("general.months"))[m - 1];
        results.push(this.monthMonthDate[0].options[m] = new Option(strMonth, m));
      }
      return results;
    };

    RangeSelectCtrl.prototype.onSave = function(event) {
      var firm, selectedRangeTimes;
      if (this.validateForm()) {
        selectedRangeTimes = {
          start: this.startDate.val(),
          end: this.endDate.val()
        };
        __FacadeCore.Cache_remove(appName + "selectedRangeTimes");
        __FacadeCore.Cache_set(appName + "selectedRangeTimes", selectedRangeTimes);
        firm = __FacadeCore.Cache_get(appName + "firm");
        if (firm.firBilledModule === 0) {
          return __FacadeCore.Router_article("booking", "report-apo");
        } else {
          return __FacadeCore.Router_article("booking", "report-sales");
        }
      }
    };

    RangeSelectCtrl.prototype.validateForm = function() {
      var result;
      result = true;
      this.startDateError.html("");
      this.endDateError.html("");
      if (!checkValidityDate(this.startDate.val(), this.startDate.attr("required"))) {
        this.startDateError.html(getMessageValidity(this.startDate[0]));
        this.startDate[0].focus();
        result = false;
      } else if (!checkValidityDate(this.endDate.val(), this.endDate.attr("required"))) {
        this.endDateError.html(getMessageValidity(this.endDate[0]));
        this.endDate[0].focus();
        result = false;
      }
      return result;
    };

    RangeSelectCtrl.prototype.onCancel = function(event) {
      return __FacadeCore.Router_article("booking", "report-sales");
    };

    return RangeSelectCtrl;

  })(Monocle.Controller);

  __Controller.RangeSelect = new RangeSelectCtrl("section#rangeSelect");

}).call(this);

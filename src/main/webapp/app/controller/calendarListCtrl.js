// Generated by CoffeeScript 1.12.7
(function() {
  var CalendarListCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  CalendarListCtrl = (function(superClass) {
    extend(CalendarListCtrl, superClass);

    function CalendarListCtrl() {
      return CalendarListCtrl.__super__.constructor.apply(this, arguments);
    }

    CalendarListCtrl.prototype.events = {
      "load article#list-calendar": "loadCalendar",
      "singleTap a[data-action=new]": "onNew"
    };

    CalendarListCtrl.prototype.elements = {
      "#list-calendar": "listCalendar",
      "header a[href=\\#]": "header",
      "footer a": "footer",
      "a[data-router=aside]": "buttonMenu",
      "a[data-action=new]": "buttonAdd"
    };

    CalendarListCtrl.prototype.onNew = function(event) {
      if (this.listCalendar.hasClass("active")) {
        return __FacadeCore.Router_section("newCalendar");
      }
    };

    CalendarListCtrl.prototype.loadCalendar = function(event) {
      var _this, data, local, url;
      this.header.hide();
      this.footer.hide();
      this.buttonMenu.show();
      this.buttonAdd.show();
      Lungo.Element.loading("#list-calendar ul", "black");
      url = "http://" + appHost + "/calendar/manager/list";
      local = __FacadeCore.Cache_get(appName + "local");
      data = {
        localId: local.id
      };
      _this = this;
      return $$.json(url, data, function(response) {
        return _this.showCalendar(response);
      });
    };

    CalendarListCtrl.prototype.showCalendar = function(response) {
      var calEnabled, calendar, calendarAux, i, len, result, results, texts, textsTemplates, view;
      if (response.length > 0) {
        result = Lungo.Core.toArray(response);
        result = Lungo.Core.orderByProperty(result, "calName", "asc");
        this.listCalendar.children().empty();
        texts = {
          cabText: findLangTextElement("label.aside.places")
        };
        view = new __View.ListCabView({
          model: texts,
          container: "section#booking article#list-calendar ul"
        });
        view.append(texts);
        results = [];
        for (i = 0, len = result.length; i < len; i++) {
          calendarAux = result[i];
          calEnabled = false;
          textsTemplates = {
            enabled: findLangTextElement("form.closed")
          };
          if (calendarAux.enabled === 1) {
            calEnabled = true;
            textsTemplates.enabled = findLangTextElement("form.enabled");
          }
          calendar = new __Model.Calendar({
            enabled: calEnabled,
            calId: calendarAux.id,
            calLocalId: calendarAux.calLocalId,
            calName: calendarAux.calName,
            calDesc: calendarAux.calDesc,
            texts: textsTemplates,
            calLocalTasks: calendarAux.calLabelLocalTasks,
            calLocalTasksId: calendarAux.calLocalTasksId,
            calDiaryMon: calendarAux.calSemanalDiary.semMonDiary,
            calDiaryTue: calendarAux.calSemanalDiary.semTueDiary,
            calDiaryWed: calendarAux.calSemanalDiary.semWedDiary,
            calDiaryThu: calendarAux.calSemanalDiary.semThuDiary,
            calDiaryFri: calendarAux.calSemanalDiary.semFriDiary,
            calDiarySat: calendarAux.calSemanalDiary.semSatDiary,
            calDiarySun: calendarAux.calSemanalDiary.semSunDiary,
            calSemanalDiary: calendarAux.calSemanalDiary
          });
          view = new __View.CalendarListView({
            model: calendar
          });
          results.push(view.append(calendar));
        }
        return results;
      } else {
        this.listCalendar.children().empty();
        texts = {
          cabText: findLangTextElement("label.aside.places")
        };
        view = new __View.ListCabView({
          model: texts,
          container: "section#booking article#list-calendar ul"
        });
        view.append(texts);
        return Lungo.Notification.success(findLangTextElement("label.notification.noData.title"), findLangTextElement("label.notification.noData.text"), null, 3);
      }
    };

    return CalendarListCtrl;

  })(Monocle.Controller);

  __Controller.CalendarList = new CalendarListCtrl("section#booking");

}).call(this);

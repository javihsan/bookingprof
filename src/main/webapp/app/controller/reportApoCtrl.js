// Generated by CoffeeScript 1.12.7
(function() {
  var ReportApoCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ReportApoCtrl = (function(superClass) {
    extend(ReportApoCtrl, superClass);

    function ReportApoCtrl() {
      return ReportApoCtrl.__super__.constructor.apply(this, arguments);
    }

    ReportApoCtrl.prototype.events = {
      "load article#report-apo": "loadReport",
      "singleTap a[data-action=send]": "onSend",
      "singleTap #report-apo #report-range": "loadRange"
    };

    ReportApoCtrl.prototype.elements = {
      "header a[href=\\#]": "header",
      "header a[href=\\#menu]": "aside",
      "footer a": "footer",
      "a[data-action=send]": "buttonSend",
      "#report-apo": "artReport",
      "#report-range": "reportRangeTimes",
      "#report-apo #fin-table": "reportFinTable",
      "#report-apo #fin-pie": "reportFinPie",
      "#report-apo #booking-table": "reportBookingTable",
      "#report-apo #booking-pie": "reportBookingPie",
      "#report-apo #task-table": "reportTaskTable",
      "#report-apo #task-column1": "reportTaskColumn1"
    };

    ReportApoCtrl.prototype.loadRange = function(event) {
      return __FacadeCore.Router_article("rangeSelect", "range-form");
    };

    ReportApoCtrl.prototype.loadReport = function(event) {
      var _this, data, local, selectedRangeTimes, strRange, url;
      this.header.show();
      this.aside.show();
      this.footer.show();
      selectedRangeTimes = __FacadeCore.Cache_get(appName + "selectedRangeTimes");
      if (selectedRangeTimes) {
        strRange = dateToStringFormat(stringToDate(selectedRangeTimes.start)) + " - " + dateToStringFormat(stringToDate(selectedRangeTimes.end));
        strRange += ". " + findLangTextElement("label.html.apoFor3") + ".";
        this.reportRangeTimes.html(strRange);
        url = "http://" + appHost + "/report/manager/apo/all";
        local = __FacadeCore.Cache_get(appName + "local");
        data = {
          localId: local.id,
          selectedDateStart: selectedRangeTimes.start,
          selectedDateEnd: selectedRangeTimes.end
        };
        _this = this;
        return $$.json(url, data, function(responseAll) {
          url = "http://" + appHost + "/report/manager/apo/booking";
          return $$.json(url, data, function(responseBooking) {
            url = "http://" + appHost + "/report/manager/apo/task";
            return $$.json(url, data, function(responseTask) {
              return _this.showReport(responseAll, responseBooking, responseTask);
            });
          });
        });
      } else {
        this.reportRangeTimes.html("");
        return Lungo.Notification.success(findLangTextElement("report.notification.selectRange.title"), findLangTextElement("report.notification.selectRange.text"), null, 3, function(response) {
          return __FacadeCore.Router_article("rangeSelect", "range-form");
        });
      }
    };

    ReportApoCtrl.prototype.showReport = function(responseAll, responseBooking, responseTask) {
      var chartColumn, chartPie, chartTable, data, local, strCab, total, view;
      local = __FacadeCore.Cache_get(appName + "local");
      data = new google.visualization.DataTable(responseAll);
      total = responseAll.rows[0].c[1].v;
      chartTable = new google.visualization.Table(this.reportFinTable[0]);
      chartTable.draw(data, {
        sortColumn: 1,
        sortAscending: false
      });
      view = new google.visualization.DataView(data);
      view.hideRows([0]);
      strCab = findLangTextElement("report.apo.allPie.cab");
      strCab += ": " + total;
      chartPie = new google.visualization.PieChart(this.reportFinPie[0]);
      chartPie.draw(view, {
        title: strCab,
        backgroundColor: "#f4f5f0"
      });
      data = new google.visualization.DataTable(responseBooking);
      data.sort([
        {
          column: 1,
          desc: true
        }, {
          column: 0
        }
      ]);
      total = responseBooking.rows[0].c[1].v;
      chartTable = new google.visualization.Table(this.reportBookingTable[0]);
      chartTable.draw(data);
      view = new google.visualization.DataView(data);
      view.hideRows([0]);
      strCab = findLangTextElement("report.apo.allPie.cab");
      strCab += ": " + total;
      chartPie = new google.visualization.PieChart(this.reportBookingPie[0]);
      chartPie.draw(view, {
        title: strCab,
        backgroundColor: "#f4f5f0"
      });
      data = new google.visualization.DataTable(responseTask);
      chartTable = new google.visualization.Table(this.reportTaskTable[0]);
      chartTable.draw(data, {
        sortColumn: 1,
        sortAscending: false
      });
      total = responseTask.rows[0].c[1].v;
      view = new google.visualization.DataView(data);
      view.hideRows([0]);
      strCab = findLangTextElement("report.apo.workedPie");
      strCab += ": " + total;
      chartColumn = new google.visualization.ColumnChart(this.reportTaskColumn1[0]);
      return chartColumn.draw(view, {
        title: strCab,
        backgroundColor: "#f4f5f0",
        colors: ["#2f886b"]
      });
    };

    ReportApoCtrl.prototype.onSend = function(event) {
      var content, data, local, selectedRangeTimes, url;
      url = "http://" + appHost + "/report/manager/send";
      selectedRangeTimes = __FacadeCore.Cache_get(appName + "selectedRangeTimes");
      content = this.reportFinTable.html() + this.reportBookingTable.html() + reportTaskTable.html();
      local = __FacadeCore.Cache_get(appName + "local");
      data = {
        localId: local.id,
        selectedDateStart: selectedRangeTimes.start,
        selectedDateEnd: selectedRangeTimes.end,
        content: content
      };
      return $$.post(url, data, function() {
        return Lungo.Notification.success(findLangTextElement("report.notification.mail.send.title"), findLangTextElement("report.notification.mail.send.text"), null, 3);
      });
    };

    return ReportApoCtrl;

  })(Monocle.Controller);

  __Controller.ReportApo = new ReportApoCtrl("section#booking");

}).call(this);

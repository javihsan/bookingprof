// Generated by CoffeeScript 1.12.7
(function() {
  var LangSelectCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  LangSelectCtrl = (function(superClass) {
    extend(LangSelectCtrl, superClass);

    function LangSelectCtrl() {
      return LangSelectCtrl.__super__.constructor.apply(this, arguments);
    }

    LangSelectCtrl.prototype.events = {
      "load article#langs": "loadLangSelect",
      "singleTap article#langs li": "onLangSelect"
    };

    LangSelectCtrl.prototype.elements = {
      "#langs": "listLangs",
      "header a[href=\\#]": "header",
      "footer a": "footer"
    };

    LangSelectCtrl.prototype.loadLangSelect = function(event) {
      var _this, url;
      this.header.hide();
      this.footer.hide();
      Lungo.Element.loading("#langs ul", "black");
      url = "http://" + appHost + "/lang/list";
      _this = this;
      return $$.json(url, null, function(response) {
        return _this.showLoadLangSelect(response);
      });
    };

    LangSelectCtrl.prototype.showLoadLangSelect = function(response) {
      var i, lang, langAux, len, result, view;
      result = Lungo.Core.toArray(response);
      this.listLangs.children().empty();
      for (i = 0, len = result.length; i < len; i++) {
        langAux = result[i];
        lang = new __Model.Lang({
          lanId: langAux.lanId,
          lanCode: langAux.lanCode,
          lanName: langAux.lanName
        });
        view = new __View.LangSelectView({
          model: lang
        });
        view.append(lang);
      }
      return this.selectLang(langApp);
    };

    LangSelectCtrl.prototype.selectLang = function(langSel) {
      var local, localLangs;
      local = __FacadeCore.Cache_get(appName + "local");
      localLangs = local.locLangs;
      return $$("article#langs *[data-lang]").each(function() {
        var lang;
        $$(this).show();
        lang = $$(this).attr("data-lang");
        if (localLangs && lang && Lungo.Core.findByProperty(localLangs, "lanCode", lang)) {
          $$(this).removeClass();
          $$(this).addClass("selectable");
          if (lang && lang === langSel) {
            return $$(this).addClass("current active");
          }
        } else {
          return $$(this).hide();
        }
      });
    };

    LangSelectCtrl.prototype.onLangSelect = function(event) {
      var lang;
      lang = $$(event.target).attr("data-lang");
      if (lang && lang !== langApp) {
        this.selectLang(lang);
        changeLang(lang);
        if ($$("#table-month")[0]) {
          setCurrentAside("langs", "table-month");
          return __FacadeCore.Router_article("booking", "table-month");
        } else if ($$("#local-tasks")[0]) {
          setCurrentAside("langs", "local-tasks");
          return __FacadeCore.Router_article("booking", "local-tasks");
        } else if ($$("#report-sales")[0]) {
          setCurrentAside("langs", "report-sales");
          return __FacadeCore.Router_article("booking", "report-sales");
        }
      }
    };

    return LangSelectCtrl;

  })(Monocle.Controller);

  __Controller.LangSelect = new LangSelectCtrl("section#booking");

}).call(this);

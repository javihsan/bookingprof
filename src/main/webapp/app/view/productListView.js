// Generated by CoffeeScript 1.12.7
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  __View.ProductListView = (function(superClass) {
    extend(ProductListView, superClass);

    function ProductListView() {
      return ProductListView.__super__.constructor.apply(this, arguments);
    }

    ProductListView.prototype.container = "section#booking article#list-product ul";

    ProductListView.prototype.template_url = "/app/templates/productList.mustache";

    ProductListView.prototype.events = {
      "singleTap li": "loadProduct",
      "swiping li": "onSwiping"
    };

    ProductListView.prototype.loadProduct = function(event) {
      if (__FacadeCore.isSwipeLeft(event, true)) {
        return this.onRemove(event);
      } else {
        __FacadeCore.Cache_remove(appName + "productNew");
        __FacadeCore.Cache_set(appName + "productNew", this.model);
        return __FacadeCore.Router_article("newProduct", "product-form");
      }
    };

    ProductListView.prototype.onSwiping = function(event) {
      event.preventDefault();
      if (__FacadeCore.isSwipeLeft(event)) {
        return this.onRemove(event);
      }
    };

    ProductListView.prototype.onRemove = function(event) {
      var _this, dataAccept, dataCancel, dataConfirm;
      if (!this.model.proDefault) {
        _this = this;
        dataAccept = {
          icon: 'checkmark',
          label: 'Accept',
          callback: function() {
            return _this.removeConfirm(event);
          }
        };
        dataCancel = {
          icon: 'checkmark',
          label: 'Cancel',
          callback: function() {
            return {};
          }
        };
        dataConfirm = {
          icon: 'user',
          title: findLangTextElement("label.notification.deleteProduct.title"),
          description: findLangTextElement("label.notification.deleteProduct.text"),
          accept: dataAccept,
          cancel: dataCancel
        };
        return Lungo.Notification.confirm(dataConfirm);
      }
    };

    ProductListView.prototype.removeConfirm = function(event) {
      var _this, data, url;
      url = "http://" + appHost + "/product/manager/remove";
      data = {
        localId: this.model.proLocalId,
        id: this.model.proId
      };
      _this = this;
      return $$.put(url, data, function() {
        Lungo.Notification.success(findLangTextElement("label.notification.deletedProduct.title"), findLangTextElement("label.notification.deletedProduct.text"), null, 3);
        return _this.remove();
      });
    };

    return ProductListView;

  })(Monocle.View);

}).call(this);

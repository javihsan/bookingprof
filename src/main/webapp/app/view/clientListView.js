// Generated by CoffeeScript 1.12.7
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  __View.ClientListView = (function(superClass) {
    extend(ClientListView, superClass);

    function ClientListView() {
      return ClientListView.__super__.constructor.apply(this, arguments);
    }

    ClientListView.prototype.container = "section#booking article#list-clients ul";

    ClientListView.prototype.template_url = "/app/templates/clientList.mustache";

    ClientListView.prototype.events = {
      "singleTap li": "selectClient",
      "swiping li": "onSwiping"
    };

    ClientListView.prototype.selectClient = function(event) {
      if (__FacadeCore.isSwipeLeft(event, true)) {
        return this.onRemove(event);
      } else {
        this.model.router = "list-clients";
        __FacadeCore.Cache_remove(appName + "client");
        __FacadeCore.Cache_set(appName + "client", this.model);
        return __FacadeCore.Router_section("newClient");
      }
    };

    ClientListView.prototype.onSwiping = function(event) {
      event.preventDefault();
      if (__FacadeCore.isSwipeLeft(event)) {
        return this.onRemove(event);
      }
    };

    ClientListView.prototype.onRemove = function(event) {
      var _this, dataAccept, dataCancel, dataConfirm;
      _this = this;
      dataAccept = {
        icon: 'checkmark',
        label: 'Accept',
        callback: function() {
          return _this.removeConfirm(event);
        }
      };
      dataCancel = {
        icon: 'checkmark',
        label: 'Cancel',
        callback: function() {
          return {};
        }
      };
      dataConfirm = {
        icon: 'user',
        title: findLangTextElement("label.notification.deleteClient.title"),
        description: findLangTextElement("label.notification.deleteClient.text"),
        accept: dataAccept,
        cancel: dataCancel
      };
      return Lungo.Notification.confirm(dataConfirm);
    };

    ClientListView.prototype.removeConfirm = function(event) {
      var _this, data, url;
      url = "http://" + appHost + "/client/operator/remove";
      data = {
        id: this.model.cliId
      };
      _this = this;
      return $$.put(url, data, function() {
        var cli, index;
        Lungo.Notification.success(findLangTextElement("label.notification.deletedClient.title"), findLangTextElement("label.notification.deletedClient.text"), null, 3);
        cli = Lungo.Core.findByProperty(__Controller.ClientList.result, "id", _this.model.cliId);
        index = __Controller.ClientList.result.indexOf(cli);
        if (index > -1) {
          __Controller.ClientList.result.splice(index, 1);
        }
        return _this.remove();
      });
    };

    return ClientListView;

  })(Monocle.View);

}).call(this);

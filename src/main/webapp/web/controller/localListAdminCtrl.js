// Generated by CoffeeScript 1.12.7
(function() {
  var LocalListAdminCtrl,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  LocalListAdminCtrl = (function(superClass) {
    extend(LocalListAdminCtrl, superClass);

    function LocalListAdminCtrl() {
      return LocalListAdminCtrl.__super__.constructor.apply(this, arguments);
    }

    LocalListAdminCtrl.prototype.events = {
      "load article#list-local": "loadLocal",
      "singleTap a[data-action=new]": "onNewLocal"
    };

    LocalListAdminCtrl.prototype.elements = {
      "#list-local": "listLocal",
      "#header_list_text": "header"
    };

    LocalListAdminCtrl.prototype.onNewLocal = function(event) {
      if (this.listLocal.hasClass("active")) {
        return __FacadeCore.Router_section("newLocal");
      }
    };

    LocalListAdminCtrl.prototype.loadLocal = function(event) {
      var _this, data, url;
      this.header.html(AppAdmin.firmDomain + " - " + findLangTextElement("label.aside.locals"));
      Lungo.Element.loading("#list-local ul", "black");
      url = "http://" + appHost + "/local/admin/list";
      data = {
        domain: AppAdmin.firmDomain
      };
      _this = this;
      return $$.json(url, data, function(response) {
        return _this.showLocal(response);
      });
    };

    LocalListAdminCtrl.prototype.showLocal = function(response) {
      var i, len, locEnabled, local, localAux, result, results, textsTemplates, view;
      if (response.length > 0) {
        result = Lungo.Core.toArray(response);
        result = Lungo.Core.orderByProperty(result, "locName", "asc");
        this.listLocal.children().empty();
        textsTemplates = {
          enabled: findLangTextElement("form.enabled")
        };
        results = [];
        for (i = 0, len = result.length; i < len; i++) {
          localAux = result[i];
          locEnabled = false;
          textsTemplates = {
            enabled: findLangTextElement("form.closed")
          };
          if (localAux.enabled === 1) {
            locEnabled = true;
            textsTemplates.enabled = findLangTextElement("form.enabled");
          }
          local = new __Model.Local({
            enabled: locEnabled,
            locId: localAux.id,
            locName: localAux.locName,
            locLocation: localAux.locLocation,
            texts: textsTemplates
          });
          view = new __View.LocalListAdminView({
            model: local
          });
          results.push(view.append(local));
        }
        return results;
      } else {
        this.listLocal.children().empty();
        return Lungo.Notification.success(findLangTextElement("label.notification.noData.title"), findLangTextElement("label.notification.noData.text"), null, 3);
      }
    };

    return LocalListAdminCtrl;

  })(Monocle.Controller);

  __Controller.LocalListAdmin = new LocalListAdminCtrl("section#admin");

}).call(this);
